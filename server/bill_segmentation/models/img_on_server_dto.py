# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from bill_segmentation.models.base_model_ import Model
from bill_segmentation import util


class ImgOnServerDto(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, img_id=None, img_url=None):  # noqa: E501
        """ImgOnServerDto - a model defined in OpenAPI

        :param img_id: The img_id of this ImgOnServerDto.  # noqa: E501
        :type img_id: str
        :param img_url: The img_url of this ImgOnServerDto.  # noqa: E501
        :type img_url: str
        """
        self.openapi_types = {
            'img_id': str,
            'img_url': str
        }

        self.attribute_map = {
            'img_id': 'imgId',
            'img_url': 'imgUrl'
        }

        self._img_id = img_id
        self._img_url = img_url

    @classmethod
    def from_dict(cls, dikt) -> 'ImgOnServerDto':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The imgOnServerDto of this ImgOnServerDto.  # noqa: E501
        :rtype: ImgOnServerDto
        """
        return util.deserialize_model(dikt, cls)

    @property
    def img_id(self):
        """Gets the img_id of this ImgOnServerDto.

        图像 ID，用于唯一确定一个图像  # noqa: E501

        :return: The img_id of this ImgOnServerDto.
        :rtype: str
        """
        return self._img_id

    @img_id.setter
    def img_id(self, img_id):
        """Sets the img_id of this ImgOnServerDto.

        图像 ID，用于唯一确定一个图像  # noqa: E501

        :param img_id: The img_id of this ImgOnServerDto.
        :type img_id: str
        """

        self._img_id = img_id

    @property
    def img_url(self):
        """Gets the img_url of this ImgOnServerDto.

        图像 Url，用于访问图像  # noqa: E501

        :return: The img_url of this ImgOnServerDto.
        :rtype: str
        """
        return self._img_url

    @img_url.setter
    def img_url(self, img_url):
        """Sets the img_url of this ImgOnServerDto.

        图像 Url，用于访问图像  # noqa: E501

        :param img_url: The img_url of this ImgOnServerDto.
        :type img_url: str
        """

        self._img_url = img_url
