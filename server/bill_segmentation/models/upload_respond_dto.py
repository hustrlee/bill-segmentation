# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from bill_segmentation.models.base_model_ import Model
from bill_segmentation import util


class UploadRespondDto(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, upload_img_url=None, segmentation_urls=None):  # noqa: E501
        """UploadRespondDto - a model defined in OpenAPI

        :param upload_img_url: The upload_img_url of this UploadRespondDto.  # noqa: E501
        :type upload_img_url: str
        :param segmentation_urls: The segmentation_urls of this UploadRespondDto.  # noqa: E501
        :type segmentation_urls: List[str]
        """
        self.openapi_types = {
            'upload_img_url': str,
            'segmentation_urls': List[str]
        }

        self.attribute_map = {
            'upload_img_url': 'uploadImgUrl',
            'segmentation_urls': 'segmentationUrls'
        }

        self._upload_img_url = upload_img_url
        self._segmentation_urls = segmentation_urls

    @classmethod
    def from_dict(cls, dikt) -> 'UploadRespondDto':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The uploadRespondDto of this UploadRespondDto.  # noqa: E501
        :rtype: UploadRespondDto
        """
        return util.deserialize_model(dikt, cls)

    @property
    def upload_img_url(self):
        """Gets the upload_img_url of this UploadRespondDto.


        :return: The upload_img_url of this UploadRespondDto.
        :rtype: str
        """
        return self._upload_img_url

    @upload_img_url.setter
    def upload_img_url(self, upload_img_url):
        """Sets the upload_img_url of this UploadRespondDto.


        :param upload_img_url: The upload_img_url of this UploadRespondDto.
        :type upload_img_url: str
        """

        self._upload_img_url = upload_img_url

    @property
    def segmentation_urls(self):
        """Gets the segmentation_urls of this UploadRespondDto.


        :return: The segmentation_urls of this UploadRespondDto.
        :rtype: List[str]
        """
        return self._segmentation_urls

    @segmentation_urls.setter
    def segmentation_urls(self, segmentation_urls):
        """Sets the segmentation_urls of this UploadRespondDto.


        :param segmentation_urls: The segmentation_urls of this UploadRespondDto.
        :type segmentation_urls: List[str]
        """

        self._segmentation_urls = segmentation_urls
